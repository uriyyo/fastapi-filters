[tool.poetry]
name = "fastapi-filters"
version = "0.1.1"
description = "fastapi-filters"
authors = ["Yurii Karabas <1998uriyyo@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/uriyyo/fastapi-filters"
packages = [{ include = "fastapi_filters" }]
classifiers = [
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^1.10.4"
fastapi = "^0.89.1"
typing-extensions = "^4.4.0"
sqlalchemy = { version = "^2.0.0", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.20.3"
httpx = "^0.23.3"
asgi-lifespan = "^2.0.0"
ruff = "^0.0.218"
mypy = "^0.991"
black = "^22.12.0"
pre-commit = "^2.21.0"
uvicorn = "^0.20.0"

[tool.poetry.extras]
sqlalchemy = ["sqlalchemy"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = """
"""

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''

[tool.ruff]
line-length = 120
select = ["E", "F"]
ignore = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]
per-file-ignores = { }
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = 3.8
strict = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = false
show_column_numbers = true
show_error_codes = true

[tool.coverage.paths]
source = ["fastapi_filters"]

[tool.coverage.run]
source = ["fastapi_filters"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstractmethod",
    "@overload",
    "if TYPE_CHECKING:",
]